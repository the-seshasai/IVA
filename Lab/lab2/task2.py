frame_types =["I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"P"]






# Count the number of each frame type
frame_counts = {'I': 0, 'P': 0, 'B': 0}
for frame_type in frame_types:
    if frame_type in frame_counts:
        frame_counts[frame_type] += 1

# Calculate total frames
total_frames = len(frame_types)

# Calculate percentage of each frame type
frame_percentages = {ftype: (count / total_frames) * 100 for ftype, count in frame_counts.items()}

# Print the results
print(f"Frame Counts: {frame_counts}")
print(f"Frame Percentages: {frame_percentages}")


import matplotlib.pyplot as plt

def plot_distribution(frame_counts, frame_percentages):
    # Plotting the Pie Chart
    plt.figure(figsize=(12, 6))
    plt.subplot(1, 2, 1)
    plt.pie(frame_counts.values(), labels=frame_counts.keys(), autopct='%1.1f%%')
    plt.title('Frame Type Distribution (Pie Chart)')

    # Plotting the Bar Graph
    plt.subplot(1, 2, 2)
    plt.bar(frame_counts.keys(), frame_counts.values(), color=['red', 'green', 'blue'])
    plt.xlabel('Frame Type')
    plt.ylabel('Count')
    plt.title('Frame Type Distribution (Bar Graph)')

    plt.tight_layout()
    plt.show()

plot_distribution(frame_counts, frame_percentages)
