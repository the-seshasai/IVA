import os
# Frame types provided
frame_types =["I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"I"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"B"
,"P"
,"B"
,"B"
,"P"
,"P"]


# Path to frames directory
frames_dir = './frames/'  # Adjust this path as needed

# Rename frames
for i, frame_type in enumerate(frame_types):
    original_filename = f"frame_{i+1:04d}.jpeg"
    new_filename = f"{frame_type}_frame_{i+1:04d}.jpeg"
    original_path = os.path.join(frames_dir, original_filename)
    new_path = os.path.join(frames_dir, new_filename)
    if os.path.exists(original_path):
        os.rename(original_path, new_path)
    else:
        print(f"File {original_filename} does not exist in the directory.")

import cv2
import matplotlib.pyplot as plt

# Define a function to display images using OpenCV
def display_frames(frame_paths):
    for path in frame_paths:
        # Load the image
        image = cv2.imread(path)
        # Convert BGR to RGB for displaying using matplotlib
        image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
        plt.imshow(image_rgb)
        plt.title(f"Frame: {os.path.basename(path)}")
        plt.axis('off')
        plt.show()

# Example paths (Replace with actual paths after renaming)
example_I_frame = os.path.join(frames_dir, 'I_frame_0001.jpeg')
example_P_frame = os.path.join(frames_dir, 'P_frame_0005.jpeg')
example_B_frame = os.path.join(frames_dir, 'B_frame_0002.jpeg')

# Displaying example frames
display_frames([example_I_frame, example_P_frame, example_B_frame])
